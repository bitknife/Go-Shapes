# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: messages.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import Dict

import betterproto


@dataclass
class PlayerLogin(betterproto.Message):
    username: str = betterproto.string_field(1)
    password: str = betterproto.string_field(2)


@dataclass
class PlayerLogout(betterproto.Message):
    username: str = betterproto.string_field(1)


@dataclass
class Ping(betterproto.Message):
    sent: int = betterproto.uint64_field(1)
    bounced: int = betterproto.uint64_field(2)
    received: int = betterproto.uint64_field(3)


@dataclass
class GameObjectEvent(betterproto.Message):
    """
    GameObjectEvent:Manages lifecycle and basic properties of GameObjects.Other
    more specific events for certain classes sets morespecific attributes.Some
    terminology:- Only server can CREATE and DELETE.- Clients SPAWNS or REMOVES
    representations.- Clients can request update of objects by sending to
    server.
    """

    id: str = betterproto.string_field(1)
    # Server frame this happened in
    tick: int = betterproto.int64_field(2)
    # What class (on client typically) to spawn.
    kind: str = betterproto.string_field(3)
    # If explicit action, like create, delete, hide, show etc.
    action: str = betterproto.string_field(4)
    # Translation within current segment
    x: int = betterproto.int32_field(5)
    y: int = betterproto.int32_field(6)
    z: int = betterproto.int32_field(7)
    # Width and height
    w: int = betterproto.int32_field(8)
    h: int = betterproto.int32_field(9)
    # Rotation in degrees
    r: int = betterproto.int32_field(10)
    # Initial values for this specific class to be set during this action
    attributes: Dict[str, str] = betterproto.map_field(
        11, betterproto.TYPE_STRING, betterproto.TYPE_STRING
    )


@dataclass
class SetGameObjectAttributes(betterproto.Message):
    """https://protobuf.dev/programming-guides/proto3/#maps"""

    id: int = betterproto.int64_field(1)
    attributes: Dict[str, str] = betterproto.map_field(
        2, betterproto.TYPE_STRING, betterproto.TYPE_STRING
    )


@dataclass
class Packet(betterproto.Message):
    player_login: "PlayerLogin" = betterproto.message_field(1, group="payload")
    player_logout: "PlayerLogout" = betterproto.message_field(2, group="payload")
    ping: "Ping" = betterproto.message_field(3, group="payload")
    game_object_event: "GameObjectEvent" = betterproto.message_field(4, group="payload")
    set_game_object_attributes: "SetGameObjectAttributes" = betterproto.message_field(
        5, group="payload"
    )
