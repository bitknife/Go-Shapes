syntax = "proto3";

package messages;

option go_package = "./shared";

/*
    None game-related messages
 */

message PlayerLogin {
    string username = 1;
    string password = 2;
}

message PlayerLogout {
    string username = 1;
}

message Ping {
    uint64 sent = 1;
    uint64 bounced = 2;
    uint64 received = 3;
}

message MouseInput {
    // A bit special for a mouse-centric game
    int32 mouse_x = 1;
    int32 mouse_y = 2;
    bool right_click = 3;
    bool left_click = 4;
}

message WASDInput {
    // Keyboard-centric input
    int32 forward = 1;
    int32 backward = 2;
    int32 right = 3;
    int32 left = 4;
}

enum TurretRotation {
    CW = 0;
    CCW = 1;
    STILL = 2;
}
message TankStyleMovement {
    TurretRotation turretRotation = 1;
    int32 forward = 2;
    int32 backward = 3;
    int32 right = 4;
    int32 left = 5;
}

/*
    GameObjectEvent:
        Sent by server to clients.
        Manages lifecycle and basic properties of all GameObjects.
        Other more specific events for certain classes sets more
            specific attributes.

    Client:
    - SPAWNS or REMOVES representations.

*/
message GameObjectEvent {
    string Id = 1;

    // Server frame this happened in
    int64 Tick = 2;

    // What class (on client typically) to spawn.
    string Kind = 3;

    // If explicit action, like create, delete, hide, show etc.
    string Action = 4;

    // Translation within current segment
    int32 X = 5;
    int32 Y = 6;
    int32 Z = 7;
    // Width and height
    int32 W = 8;
    int32 H = 9;
    // Rotation in degrees
    int32 R = 10;

    // Initial values for this specific class to be set during this action
    map<string, string> Attributes = 11;
}

/*
    https://protobuf.dev/programming-guides/proto3/#maps
 */
message SetGameObjectAttributes {
    int64 id = 1;
    map<string, string> attributes = 2;
}

message Packet {
    oneof payload {
        PlayerLogin playerLogin = 1;
        PlayerLogout playerLogout = 2;
        Ping ping = 3;

        MouseInput mouseInput = 4;
        WASDInput wasdInput = 5;

        GameObjectEvent gameObjectEvent = 10;
        SetGameObjectAttributes setGameObjectAttributes = 11;
    }
}
