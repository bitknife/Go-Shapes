syntax = "proto3";

package messages;

option go_package = "./shared";

/*
    None game-related messages
 */

message PlayerLogin {
    string username = 1;
    string password = 2;
}

message PlayerLogout {
    string username = 1;
}

message Ping {
    uint64 sent = 1;
    uint64 bounced = 2;
    uint64 received = 3;
}

/*
    GameObjectEvent:
        Manages lifecycle and basic properties of GameObjects.
        Other more specific events for certain classes sets more
            specific attributes.

    Some terminology:
    - Only server can CREATE and DELETE.
    - Clients SPAWNS or REMOVES representations.

    - Clients can request update of objects by sending to server.
*/
message GameObjectEvent {
    string Id = 1;

    // Server frame this happened in
    int64 Tick = 2;

    // What class (on client typically) to spawn.
    string Kind = 3;

    // If explicit action, like create, delete, hide, show etc.
    string Action = 4;

    // Translation within current segment
    int32 X = 5;
    int32 Y = 6;
    int32 Z = 7;
    // Width and height
    int32 W = 8;
    int32 H = 9;
    // Rotation in degrees
    int32 R = 10;

    // Initial values for this specific class to be set during this action
    map<string, string> Attributes = 11;
}

/*
    https://protobuf.dev/programming-guides/proto3/#maps
 */
message SetGameObjectAttributes {
    int64 id = 1;
    map<string, string> attributes = 2;
}

message Packet {
    oneof payload {
        PlayerLogin playerLogin = 1;
        PlayerLogout playerLogout = 2;
        Ping ping = 3;

        GameObjectEvent gameObjectEvent = 4;
        SetGameObjectAttributes setGameObjectAttributes = 5;
    }
}
